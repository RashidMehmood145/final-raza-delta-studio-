{"ast":null,"code":"var _jsxFileName = \"F:\\\\Office work\\\\Garnet-theme-nextjs\\\\Garnet-theme-nextjs\\\\garnet-pools-nextjs\\\\containers\\\\HeaderMenuBS\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { NavbarCustom, NavbarToggleCustom, BrandLogo, NavLinkCustom, NavDropdownCustom, NavDropdownItemCustom } from \"./headermenubs.style\";\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header } from '../../pagedata/HeaderFooter';\n\nclass Headermenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stickyClass: 'top'\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', () => {\n      let stickyClass = 'topSticky';\n      let scrollPos = window.scrollY;\n\n      if (scrollPos < 100) {\n        stickyClass = 'top';\n      }\n\n      if (this.state.stickyClass !== stickyClass) {\n        this.setState({\n          stickyClass\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll');\n  }\n\n  render() {\n    return __jsx(NavbarCustom, {\n      expand: \"lg\",\n      fixed: \"top\",\n      isSticky: this.state.stickyClass === \"topSticky\" ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Navbar.Brand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(BrandLogo, {\n      src: this.state.stickyClass === \"topSticky\" ? require(\"../../assets/\" + Header.BrandLogoSticky) : require(\"../../assets/\" + Header.BrandLogo),\n      isSticky: this.state.stickyClass === \"topSticky\" ? true : false,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), __jsx(NavbarToggleCustom, {\n      isSticky: this.state.stickyClass === \"topSticky\" ? true : false,\n      \"aria-controls\": \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), __jsx(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(Nav, {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, Header.MenuItems.map((menuItem, idx) => {\n      return menuItem.Type === \"dropdown\" ? __jsx(NavDropdownCustom, {\n        title: menuItem.Menu,\n        id: \"basic-nav-dropdown\",\n        isSticky: this.state.stickyClass === \"topSticky\" ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, menuItem.Items.map((menuSubItem, subItemIdx) => {\n        return __jsx(NavDropdownItemCustom, {\n          href: menuSubItem.Href,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, menuSubItem.MenuSubItem);\n      })) : __jsx(NavLinkCustom, {\n        href: menuItem.id,\n        isSticky: this.state.stickyClass === \"topSticky\" ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, menuItem.Menu); // <NavLinkCustom href={menuItem.href} \n      // isSticky={this.state.stickyClass===\"topSticky\"?true:false}>{menuItem.Menu}</NavLinkCustom>\n    })))));\n  }\n\n}\n\nexport default Headermenu;","map":{"version":3,"sources":["F:/Office work/Garnet-theme-nextjs/Garnet-theme-nextjs/garnet-pools-nextjs/containers/HeaderMenuBS/index.js"],"names":["React","Component","NavbarCustom","NavbarToggleCustom","BrandLogo","NavLinkCustom","NavDropdownCustom","NavDropdownItemCustom","Container","Nav","Navbar","Header","Headermenu","constructor","props","state","stickyClass","componentDidMount","window","addEventListener","scrollPos","scrollY","setState","componentWillUnmount","removeEventListener","render","require","BrandLogoSticky","MenuItems","map","menuItem","idx","Type","Menu","Items","menuSubItem","subItemIdx","Href","MenuSubItem","id"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport {NavbarCustom,NavbarToggleCustom,BrandLogo,NavLinkCustom,NavDropdownCustom,\n    NavDropdownItemCustom} from \"./headermenubs.style\"\nimport {\n    Container,Nav,Navbar\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header } from '../../pagedata/HeaderFooter';\n\nclass Headermenu extends Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            stickyClass:'top',\n        };\n    }\n\n    componentDidMount(){\n        window.addEventListener('scroll', () => {\n            let stickyClass = 'topSticky';\n            let scrollPos = window.scrollY;\n\n            if(scrollPos < 100){\n                stickyClass = 'top';\n            }\n\n            if(this.state.stickyClass !== stickyClass)\n            {\n                this.setState({ stickyClass });\n            }\n                \n        });\n    }\n\n    componentWillUnmount() { \n        window.removeEventListener('scroll'); \n    } \n\n    render(){\n        return(\n            <NavbarCustom \n                expand=\"lg\" fixed=\"top\" \n                isSticky={this.state.stickyClass===\"topSticky\"?true:false}>\n                <Container>\n                    <Navbar.Brand href=\"/\">\n                        <BrandLogo src={this.state.stickyClass===\"topSticky\"?require(\"../../assets/\"+Header.BrandLogoSticky):require(\"../../assets/\"+Header.BrandLogo)}\n                        isSticky={this.state.stickyClass===\"topSticky\"?true:false}\n                        alt=\"Logo\"\n                        />\n                    </Navbar.Brand>\n\n                    <NavbarToggleCustom\n                    isSticky={this.state.stickyClass===\"topSticky\"?true:false}\n                    aria-controls=\"basic-navbar-nav\" />\n\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                        {\n                            Header.MenuItems.map((menuItem, idx)=>{\n                                return menuItem.Type === \"dropdown\" \n                                ? \n                                <NavDropdownCustom title={menuItem.Menu} id=\"basic-nav-dropdown\"\n                                    isSticky={this.state.stickyClass===\"topSticky\"?true:false}>\n                                    {\n                                        menuItem.Items.map((menuSubItem,subItemIdx)=>{\n                                            return <NavDropdownItemCustom href={menuSubItem.Href}>{menuSubItem.MenuSubItem}</NavDropdownItemCustom>\n                                        })\n                                    }\n                                </NavDropdownCustom>\n                                :\n                                <NavLinkCustom href={menuItem.id} \n                                isSticky={this.state.stickyClass===\"topSticky\"?true:false}>{menuItem.Menu}</NavLinkCustom>\n                                // <NavLinkCustom href={menuItem.href} \n                                // isSticky={this.state.stickyClass===\"topSticky\"?true:false}>{menuItem.Menu}</NavLinkCustom>\n                            })\n                        }\n                        </Nav>\n                    </Navbar.Collapse>\n\n                </Container>\n            </NavbarCustom>\n            \n        );\n    }\n}\n\nexport default Headermenu;"]},"metadata":{},"sourceType":"module"}