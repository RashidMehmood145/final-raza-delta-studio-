{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { NavbarCustom, NavbarToggleCustom, BrandLogo, NavLinkCustom, NavDropdownCustom, NavDropdownItemCustom } from \"./headermenubs.style\";\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header } from '../../pagedata/HeaderFooter';\n\nclass Headermenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stickyClass: 'top'\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', () => {\n      let stickyClass = 'topSticky';\n      let scrollPos = window.scrollY;\n\n      if (scrollPos < 100) {\n        stickyClass = 'top';\n      }\n\n      if (this.state.stickyClass !== stickyClass) {\n        this.setState({\n          stickyClass\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll');\n  }\n\n  render() {\n    return __jsx(NavbarCustom, {\n      expand: \"lg\",\n      fixed: \"top\",\n      isSticky: this.state.stickyClass === \"topSticky\" ? true : false\n    }, __jsx(Container, null, __jsx(Navbar.Brand, {\n      href: \"/\"\n    }, __jsx(BrandLogo, {\n      src: this.state.stickyClass === \"topSticky\" ? require(\"../../assets/\" + Header.BrandLogoSticky) : require(\"../../assets/\" + Header.BrandLogo),\n      isSticky: this.state.stickyClass === \"topSticky\" ? true : false,\n      alt: \"Logo\"\n    })), __jsx(NavbarToggleCustom, {\n      isSticky: this.state.stickyClass === \"topSticky\" ? true : false,\n      \"aria-controls\": \"basic-navbar-nav\"\n    }), __jsx(Navbar.Collapse, {\n      id: \"basic-navbar-nav\"\n    }, __jsx(Nav, {\n      className: \"ml-auto\"\n    }, Header.MenuItems.map((menuItem, idx) => {\n      return menuItem.Type === \"dropdown\" ? __jsx(NavDropdownCustom, {\n        title: menuItem.Menu,\n        id: \"basic-nav-dropdown\",\n        isSticky: this.state.stickyClass === \"topSticky\" ? true : false\n      }, menuItem.Items.map((menuSubItem, subItemIdx) => {\n        return __jsx(NavDropdownItemCustom, {\n          href: menuSubItem.Href\n        }, menuSubItem.MenuSubItem);\n      })) : __jsx(NavLinkCustom, {\n        href: menuItem.id,\n        isSticky: this.state.stickyClass === \"topSticky\" ? true : false\n      }, menuItem.Menu);\n    })))));\n  }\n\n}\n\nexport default Headermenu;","map":null,"metadata":{},"sourceType":"module"}